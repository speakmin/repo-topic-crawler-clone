(()=>{var __webpack_modules__={783:module=>{module.exports=eval("require")("@actions/artifact")},94:module=>{module.exports=eval("require")("@actions/core")},737:module=>{module.exports=eval("require")("@octokit/plugin-retry")},551:module=>{module.exports=eval("require")("@octokit/plugin-throttling")},448:module=>{module.exports=eval("require")("@octokit/rest")},205:module=>{module.exports=eval("require")("js-yaml")},147:e=>{"use strict";e.exports=require("fs")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var r=__webpack_module_cache__[e]={exports:{}};var o=true;try{__webpack_modules__[e](r,r.exports,__nccwpck_require__);o=false}finally{if(o)delete __webpack_module_cache__[e]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(94);const t=__nccwpck_require__(783);const r=__nccwpck_require__(147);const o=__nccwpck_require__(205);const{Octokit:i}=__nccwpck_require__(448);const{retry:n}=__nccwpck_require__(737);const{throttling:a}=__nccwpck_require__(551);const _=i.plugin(n,a);async function newClient(e){return new _({auth:e,retries:10,throttle:{onRateLimit:(e,t,r)=>{r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`);if(t.request.retryCount===0){r.log.info(`Retrying after ${e} seconds!`);return true}},onSecondaryRateLimit:(e,t,r)=>{r.log.warn(`Abuse detected for request ${t.method} ${t.url}`);if(t.request.retryCount===0){r.log.info(`Retrying after ${e} seconds!`);return true}}}})}async function main(){const i=e.getInput("admin_token",{required:true,trimWhitespace:true});const n=e.getInput("org",{required:true,trimWhitespace:true});const a=e.getInput("repo_topic",{required:true,trimWhitespace:true});const _=e.getInput("repo_file",{required:true,trimWhitespace:true});const c={};const s=[];let u=false;const l=await newClient(i);const p=t.create();const d=await l.paginate("GET /orgs/{org}/repos",{org:n,per_page:100});const f=d.filter((e=>e.topics.includes(a)));for(const t of f){try{const{data:r}=await l.request("GET /repos/{owner}/{repo}/contents/{path}",{owner:t.owner.login,repo:t.name,path:_});e.info(`Found ${_} in repository ${t.name} with topic ${a}}`);c[t.name]=JSON.parse(o.load(Buffer.from(r.content,{encoding:"base64"})));e.info(`collectedRepos[repo.name]`);e.info(c[t.name]);for(const r of c[t.name].models){r.repository=t.name;e.info(`model`);e.info(r);s.push(r)}}catch(r){e.debug(`Did NOT find ${_} in repository ${t.name} with topic ${a}}`);u=true;e.error(`Error: ${r}`)}}e.info(`There were ${c.length} repositories with topic ${a} and containing file ${_}}`);const m={};e.info(`collectedModels`);e.info(s);m.topic=a;m.models=s;e.info(`crawledObj`);e.info(m);r.writeFileSync("data.json",JSON.stringify(m,null,2));await p.uploadArtifact(a,["data.json"],".",{continueOnError:false,retentionDays:90});if(u){e.setFailed("Some repositories failed to be collected")}}main().catch((t=>{e.setFailed(t.message)}))})();module.exports=__webpack_exports__})();